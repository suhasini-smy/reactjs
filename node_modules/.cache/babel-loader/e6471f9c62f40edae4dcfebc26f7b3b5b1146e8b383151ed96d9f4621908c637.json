{"ast":null,"code":"import _slicedToArray from\"D:/xamp/xampp/htdocs/nodejs_projects/html_projects/project_14/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function About(){var _useState=useState({color:\"black\",backgroundColor:\"white\"}),_useState2=_slicedToArray(_useState,2),myStyle=_useState2[0],SetMystyle=_useState2[1];var _useState3=useState(\"Enable Dark Mode\"),_useState4=_slicedToArray(_useState3,2),btntext=_useState4[0],setBtnText=_useState4[1];var toggleStyle=function toggleStyle(){if(myStyle.color==='black'){SetMystyle({color:'white',backgroundColor:'black'});setBtnText('Enable White Mode');}else{SetMystyle({color:'black',backgroundColor:'white',border:'1px solid white'});setBtnText('Enable Dark Mode');}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",style:myStyle,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"accordion\",id:\"accordionExample\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",id:\"headingOne\",children:/*#__PURE__*/_jsx(\"button\",{style:myStyle,className:\"accordion-button\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseOne\",\"aria-expanded\":\"true\",\"aria-controls\":\"collapseOne\",children:\"Accordion Item #1\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseOne\",className:\"accordion-collapse collapse show\",\"aria-labelledby\":\"headingOne\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",style:myStyle,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the first item's accordion body.\"}),\" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",id:\"headingTwo\",children:/*#__PURE__*/_jsx(\"button\",{style:myStyle,className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseTwo\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseTwo\",children:\"Accordion Item #2\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseTwo\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingTwo\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",style:myStyle,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the second item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"accordion-header\",id:\"headingThree\",children:/*#__PURE__*/_jsx(\"button\",{style:myStyle,className:\"accordion-button collapsed\",type:\"button\",\"data-bs-toggle\":\"collapse\",\"data-bs-target\":\"#collapseThree\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseThree\",children:\"Accordion Item #3\"})}),/*#__PURE__*/_jsx(\"div\",{id:\"collapseThree\",className:\"accordion-collapse collapse\",\"aria-labelledby\":\"headingThree\",\"data-bs-parent\":\"#accordionExample\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-body\",style:myStyle,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"This is the third item's accordion body.\"}),\" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \",/*#__PURE__*/_jsx(\"code\",{children:\".accordion-body\"}),\", though the transition does limit overflow.\"]})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(\"button\",{onClick:toggleStyle,className:\"btn btn-primary\",children:btntext})})]})});}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","About","_useState","color","backgroundColor","_useState2","_slicedToArray","myStyle","SetMystyle","_useState3","_useState4","btntext","setBtnText","toggleStyle","border","children","className","style","id","type","onClick"],"sources":["D:/xamp/xampp/htdocs/nodejs_projects/html_projects/project_14/src/components/About.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n\r\n  const [myStyle,SetMystyle]=useState({\r\n        color:\"black\",\r\n        backgroundColor:\"white\"\r\n  });\r\n\r\n  const [btntext,setBtnText]=useState(\"Enable Dark Mode\");\r\n\r\n let toggleStyle = () =>{\r\n  if(myStyle.color === 'black')\r\n  {\r\n      SetMystyle({\r\n                  color:  'white',\r\n                  backgroundColor:'black'\r\n                });\r\n     \r\n      setBtnText('Enable White Mode');\r\n\r\n  }else{\r\n      SetMystyle({\r\n        color:  'black',\r\n        backgroundColor:'white',\r\n        border:'1px solid white'\r\n      });\r\n\r\n      setBtnText('Enable Dark Mode');\r\n  }\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={myStyle}>\r\n    <div className=\"accordion\" id=\"accordionExample\">\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingOne\">\r\n        <button style={myStyle} className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n          Accordion Item #1\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n        <button style={myStyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n          Accordion Item #2\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"headingThree\">\r\n        <button style={myStyle} className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n          Accordion Item #3\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <div className='container my-3'>\r\n      <button onClick={toggleStyle} className='btn btn-primary'>{btntext}</button>\r\n    </div>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}